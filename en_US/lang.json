{
  "lang": {
    "gui": {
      "noeffect": {
        "name": "No-Effect",
        "convert": "Convert",
        "browse": "Browse...",
        "setting": "Settings",
        "insert": "Insert",
        "check": "Check",
        "pop": "Pop",
        "file_path": "Enter Your File Path:",
        "removed": "Effects Removed:",
        "remove_success": "Successfully Removed \"${0}\"",
        "add_success": "Successfully Add \"${0}\"",
        "get_list_effect": "These effects will be removed: ${0}",
        "function(except)": {
          "not_adofai_file": "The selected file is not an ADOFAI file!",
          "not_select_file": "File Can Not Be Null",
          "error": "ERROR:\n${0}: ${1}"
        },
        "function(success)": "Remove Effects Successfully, file saved to >>  ${0}/Non_effect.adofai, spent ${1}s"
      },
      "calc": {
        "name": "PP Calculator",
        "level": "Level (Not PGU):",
        "speed": "Multiply:",
        "xacc": "X-Accuracy:",
        "is_tooEarly": "With Too Early?:",
        "is_firstClear": "Worlds first?:",
        "is_rank": "World's Rank:",
        "calcScore": "Calculate Play Point",
        "function(except)": {
          "error_level": "Invalid Level",
          "xacc_so_low": "Your X-Accuracy is so low lol (need 95% and more)",
          "write_empty": "Please fill in the blanks",
          "write_rank": "Please fill in the ranking",
          "error": "ERROR:\n${0}: ${1}"
        },
        "function(success)": "Score ${0} | Ranked Score ${1}"
      },
      "levelsearch": {
        "name": "Level Info",
        "id": "ID:",
        "search_id": "ID Search",
        "search": "Search",
        "info_search": "Info Search (TUF only)",
        "artist": "Artist:",
        "song": "Song:",
        "author": "Author:",
        "function(except)": {
          "id_is_empty": "Error: ID can not be Null\n\n\nSearched ID: ${0}",
          "status_error": "Error: ${0}\nCode: ${1}\n\n\nSearched ID: ${2}",
          "error": "ERROR:\n${0}: ${1}"
        },
        "function(TUF_success)": "TUR ID: ${0}\nSong: ${1} - ${2}\nAuthor: ${4}\nDifficulty: ${5}(${5})\nVideo Link: ${6}\nDownload Link: ${7}\nSteam Workshop Link: ${8}",
        "function(ADOFAIGG_success)": "AODFAI.gg Id: ${0}\nSong: ${1} - ${2}\nAuthor: ${4}\nDifficulty: ${5}\nVideo Link: ${5}\nDownload Link: ${6}\nSteam Workshop Link: ${7}\nTiles: ${8}\nTag: ${9}",
        "function(AQR_success)": "AODFAI.gg ID: ${0}\nSong: ${1} - ${2}\nAuthor: ${4}\nDifficulty: ${5}\nVideo Link: ${5}\nDownload Link: ${6}\nSteam Workshop Link: ${7}\nTiles: ${8}\nTag: ${9}",
        "function(find)": "Found ${0} Levels\n\n--------\n\n"
      },
      "filedownload": {
        "name": "Downloader",
        "download": "Download",
        "save_path": "Save Path:",
        "browse": "Browse...",
        "status": "Status:",
        "function(except)": {
          "id_is_empty": "File ID Can Not Be Null!",
          "id_not_find": "Error: The current file ID [${0}] does not exist",
          "link_is_empty": "Link Can Not Be Null!",
          "link_not_find": "Error: URL [${0}] Not Found",
          "fail": "Request FAILED: ${0}",
          "error_dict": "The specified directory can not be accessed:\n[${0}/${1}]\n${2}: ${4}",
          "error": "ERROR:\n${0}: ${1}"
        },
        "function()": {
          "downloading": "Status: Downloading...",
          "downloadingprocess": "Status: Downloading Progress: ${0}MB / ${1}MB"
        },
        "function(success)": "File Downloaded Successfully ${0}"
      },
      "moddownload": {
        "name": "MOD Download",
        "download": "Download",
        "reload": "Reload",
        "signName": "Name",
        "version": "Version",
        "author": "Author",
        "modID": "Update Time",
        "select_mod_version": "Select Version"
      },
      "menu": {
        "name": "About",
        "producer": "Owner: ",
        "specialThanks": "Special Thanks To: ",
        "contact_us": "Contact Us",
        "email": "Email Address: ",
        "updateLog": "Change Log",
        "github": "GitHub Link: "
      }
    },
    "logV1": {
      "name": "Log V1",
      "open_log_dir": "Open Log Directory",
      "copy": "Copy",
      "function(copy_success)": "Copied"
    },
    "logV2": {
      "name": "Log V2",
      "open_log_dir": "Open Log Directory",
      "copy": "Copy",
      "function(copy_success)": "Copied"
    },
    "info": "INFO",
    "error": "ERROR",
    "fail": "FAIL",
    "yes": "Yes",
    "no": "No"
  }
}